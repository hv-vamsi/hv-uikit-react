{"/":{"title":"About","data":{"":"This is the About page!"}},"/docs/introduction":{"title":"Introduction","data":{"":"Radix Primitives is a low-level UI component library with a focus on accessibility, customization and developer experience. You can use these components either as the base layer of your design system, or adopt them incrementally.","vision#Vision":"Most of us share similar definitions for common UI patterns like accordion, checkbox,\ncombobox, dialog, dropdown, select, slider, and tooltip. These UI patterns are documented by WAI-ARIA and generally understood by the community.However, the implementations provided to us by the web platform are inadequate. They're\neither non-existent, lacking in functionality, or cannot be customized sufficiently.So, developers are forced to build custom components; an incredibly difficult task. As a\nresult, most components on the web are inaccessible, non-performant, and lacking important\nfeatures.Our goal is to create a well-funded, open-source component library that the community can\nuse to build accessible design systems.","key-features#Key Features":"","accessible#Accessible":"Components adhere to the WAI-ARIA design patterns where possible. We handle many of the difficult implementation details related to accessibility, including aria and role attributes, focus management, and keyboard navigation. Learn more in our accessibility overview.","unstyled#Unstyled":"Components ship with zero styles, giving you complete control over styling. Components can be styled with any styling solution (vanilla CSS, CSS preprocessors, CSS-in-JS libraries). Learn more in our styling guide.","opened#Opened":"Radix Primitives are designed to be customized to suit your needs. Our open component architecture provides you granular access to each component part, so you can wrap them and add your own event listeners, props, or refs.","uncontrolled#Uncontrolled":"Where applicable, components are uncontrolled by default but can also be controlled, alternatively. All of the behavior wiring is handled internally, so you can get up and running as smoothly as possible, without needing to create any local states.","developer-experience#Developer experience":"One of our main goals is to provide the best possible developer experience. Radix Primitives provides a fully-typed API. All components share a similar API, creating a consistent and predictable experience. We've also implemented an asChild prop, giving users full control over the rendered element.","incremental-adoption#Incremental adoption":"Each primitive can be installed individually so you can adopt them incrementally.\nnpm install @radix-ui/react-dialog\nnpm install @radix-ui/react-dropdown-menu\nnpm install @radix-ui/react-tooltip\nPrimitives are also versioned independently, to further facilitate incremental adoption.","community#Community":"","discord#Discord":"To get involved with the Radix community, ask questions, and share tips, join our Discord.Join our Discord","twitter#Twitter":"To receive updates on new primitives, announcements, blog posts, and general Radix tips, follow along on Twitter.Follow Radix on Twitter","github#GitHub":"To file issues, request features, and contribute, check out our GitHub.GitHub repo\nCode of conduct"}},"/components/introduction":{"title":"Introduction","data":{"":"This is the Introduction page!"}},"/components/button":{"title":"Button","data":{"":"This is the Button page!"}},"/docs/roadmap":{"title":"Roadmap","data":{"":"This is the Roadmap page!"}},"/docs/contribute":{"title":"Contribute","data":{"":"This is the Contribute page!"}}}